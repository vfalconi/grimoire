#!/bin/bash

# shellcheck source=/dev/null
source bin/common

REPO_NAME="$(basename "$(git remote get-url origin 2> /dev/null)")"

if [[ "$REPO_NAME" != "grimoire" || "$PWD" = "$HOME" ]]; then
	bash "$BIN_PATH/status" "ERROR: Grimoire uninstall must be run in source directory"
	exit 2;
fi

# remove packages
bash bin/metastatus "The following packages will be removed."
bash bin/metastatus "CAUTION: Some may have been installed prior to the grimoire."
bat "$HOME/.grim-apt-list" --style=grid
read -rp "Remove packages? (Y/N): " confirm
if [[ $confirm == [yY] || $confirm == [yY][eE][sS] ]]; then
	bash bin/metastatus "Removing packages"
	sudo apt-get remove --assume-yes "$APT_INSTALLS"
else
	bash bin/metastatus "Skipping packages"
fi

## remove dotfiles
bash bin/metastatus "Removing dotFiles"
GRIMIGNORE="$(sed -e 's/#.*//' < .grimignore | tr -s "\n" " " | awk '{$1=$1};1')"
GRIMFILES="$(find "$PWD" -path "$PWD/.git" -prune -o -type f | sed "s#$PWD#$HOME#")"
for f in $GRIMFILES; do
	grimFilename="${f//"$HOME/"/$(cat /dev/null)}"
	if [[ ".git $GRIMIGNORE" != *"$grimFilename"* ]]; then
		rm --force --verbose "$f" 2> /dev/null
	fi
done
unset grimFilename
unset f

bash bin/metastatus "Removing tools"

# remove directories
rm --verbose --force --recursive "$BIN_PATH" 2> /dev/null
rm --verbose --force --recursive "$ETC_PATH" 2> /dev/null
rm --verbose --force --recursive "$MAN_PATH" 2> /dev/null
